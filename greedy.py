
#Grudge
import pandas as pd
import numpy as np
import math
import time
import matplotlib.pyplot as plt

import urllib.request
# 10, 25, 50, 100
numCities = 75
# url = 'https://raw.githubusercontent.com/jinchenghao/TSP/master/data/TSP100cities.tsp'
url = 'https://raw.githubusercontent.com/golanruang/TSP/main/TSP%scities.tsp.txt' % numCities
# url = "https://raw.githubusercontent.com/Gurobi/modeling-examples/master/traveling_salesman/capitals.json"
data = urllib.request.urlopen(url)
dataframe = pd.read_table(data,sep=" ",header=None)
v = dataframe.iloc[:,1:3]
 
train_v= np.array(v)
train_d=train_v
dist = np.zeros((train_v.shape[0],train_d.shape[0]))

 #Calculate distance matrix
for i in range(train_v.shape[0]):
    for j in range(train_d.shape[0]):
        dist[i,j] = math.sqrt(np.sum((train_v[i,:]-train_d[j,:])**2))
"""
 s: cities that have been traversed
 dist: distance matrix between cities
 sumpath: the current total length of the minimum path
 Dtemp: current minimum distance
 flag: access flag
"""
i=1
n=train_v.shape[0]
j=0
sumpath=0
s=[]
s.append(0)
start = time.time()
while True:
    k=1
    Detemp=10000000
    while True:
        l=0
        flag=0
        if k in s:
            flag = 1
        if (flag==0) and (dist[k][s[i-1]] < Detemp):
            j = k
            Detemp=dist[k][s[i - 1]]
        k+=1
        if k>=n:
            break
    s.append(j)
    i+=1
    sumpath+=Detemp
    if i>=n:
        break
sumpath+=dist[0][j]
end = time.time()
print("Result:")
print(sumpath)
print(s)

for m in range(n):
    print("%s-> "%(s[m]),end='')
print()
print("The running time of the program is: %s"%(end-start))

tour=s
tour.append(0)
print(type(tour[0]))

# plotting
# s={'0': (0.24696783282943102, 0.8259250597628464), '1': (0.26506440374867923, 0.7181896836165801), '2': (0.2090818625135087, 0.4897986139726963), '3': (0.3452279716591782, 0.493329898512896), '4': (0.3870789482490813, 0.3612784887823054), '5': (0.5036200883927727, 0.6044966097702), '6': (0.7321405955079443, 0.1998896708614556), '7': (0.7458184158814926, 0.22252817079475462), '8': (0.9190421708179292, 0.9782575405421327), '9': (0.5903839067851631, 0.8251009655135882), '10': (0.9781223848984217, 0.7871445287819795), '11': (0.8566356274050025, 0.40727671035773205), '12': (0.10088596783264925, 0.08366346464771368), '13': (0.9015826995986499, 0.7389200911234375), '14': (0.620068052039078, 0.9728773204497991), '15': (0.21807501057077427, 0.13924281652538884), '16': (0.7181772322961892, 0.7521713425776815), '17': (0.599916317374627, 0.7328473696481721), '18': (0.18654945744574059, 0.6269392229720654), '19': (0.3101858761414471, 0.08783678010524554), '20': (0.3145813336557156, 0.059440144362356895), '21': (0.496973592446185, 0.2047400824582647), '22': (0.2106176362835236, 0.025024269993921933), '23': (0.5749078472797905, 0.31897320133098817), '24': (0.07479041745363679, 0.47226705240248845), '25': (0.024606204650597152, 0.8823312840110479), '26': (0.6712728378569647, 0.8123540490401927), '27': (0.6004597872207644, 0.6067917363867461), '28': (0.7853981288335318, 0.15271508757401053), '29': (0.3186659376299945, 0.46660665538633106), '30': (0.5514968157986697, 0.19223117986501592), '31': (0.48281266822780056, 0.691023059715553), '32': (0.07255816725530395, 0.4858338150685422), '33': (0.5567289469217915, 0.014558971781019947), '34': (0.1948900191056393, 0.8095105416201367), '35': (0.05125445595206268, 0.8204803653258271), '36': (0.2752113894775028, 0.7604664759767163), '37': (0.8724289549208718,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  0.7879568870732278), '38': (0.47434657376009315, 0.017209777541553173), '39': (0.02117127667574492, 0.5475261885166002), '40': (0.7619630492089788, 0.059754906225966575), '41': (0.016531911118901177, 0.7507082342397065), '42': (0.29131568650845807, 0.540690640791762), '43': (0.44859671314356464, 0.3871651450616401), '44': (0.7008891207004546, 0.6729698846805614), '45': (0.34599098373693404, 0.5086299550123676), '46': (0.07103711199465412, 0.8842098982615386), '47': (0.6713511654598802, 0.33916147372251015), '48': (0.15970517795152384, 0.956724109000205), '49': (0.7459152718421106, 0.6766524995325781), '50': (0.3654950770398706, 0.19268485753298104), '51': (0.29546868154061023, 0.45653512996583856), '52': (0.5763508216527148, 0.9322930198602003), '53': (0.6576429985378488, 0.33378464594161883), '54': (0.9318512870286081, 0.5155427472107772), '55': (0.03993050053743441, 0.4540192955019292), '56': (0.053511032352340004, 0.04348430064255793), '57': (0.7401689629507642, 0.9229455179499783), '58': (0.678724332303119, 0.7318411599166774), '59': (0.9074193830856522, 0.9234429744588104), '60': (0.24956281212749387, 0.516836800649812), '61': (0.21059971427060808, 0.33714732221937826), '62': (0.6239949487647807, 0.7668951517371905), '63': (0.1702888290260295, 0.48454488387894934), '64': (0.03727529693035547, 0.5310086939297386), '65': (0.5776992602255487, 0.8543960098780505), '66': (0.8240366615826514, 0.5444851243423051), '67': (0.18439483301529636, 0.6479524035925764), '68': (0.3084629219430224, 0.020178922707812963), '69': (0.5337908726197288, 0.6255108794697345), '70': (0.7534399358069017, 0.9780763284509355), '71': (0.8403523971274452, 0.7589751778576121), '72': (0.6623449620352081, 0.4816853406272167), '73': (0.22001711044238992, 0.40472999812345734), '74': (0.00011202820696165627, 0.2351846765385851)}
s = {'0': (2915, 790), '1': (1194, 2834), '2': (536, 690), '3': (2776, 2572), '4': (390, 1265), '5': (96, 1323), '6': (360, 665), '7': (2923, 3069), '8': (614, 73), '9': (143, 1802), '10': (836, 653), '11': (670, 1011), '12': (1339, 1838), '13': (671, 69), '14': (2321, 2186), '15': (836, 22), '16': (2390, 1100), '17': (2527, 904), '18': (634, 661), '19': (2466, 2965), '20': (2109, 2375), '21': (3031, 523), '22': (1165, 194), '23': (2935, 1120), '24': (3088, 2592), '25': (2001, 1305), '26': (2224, 2586), '27': (487, 2892), '28': (1563, 93), '29': (307, 2795), '30': (56, 2114), '31': (106, 587), '32': (2318, 884), '33': (1454, 3000), '34': (2663, 2729), '35': (134, 2657), '36': (148, 713), '37': (2964, 2694), '38': (1591, 1247), '39': (523, 1609), '40': (274, 577), '41': (2925, 2689), '42': (2129, 1884), '43': (3079, 1802), '44': (1945, 1642), '45': (2612, 797), '46': (1161, 2899), '47': (2831, 2615), '48': (2226, 2318), '49': (722, 1634), '50': (
    1765, 1687), '51': (596, 1478), '52': (2317, 1423), '53': (1543, 2698), '54': (456, 1766), '55': (2975, 2923), '56': (1310, 1827), '57': (182, 2422), '58': (953, 369), '59': (919, 2865), '60': (1820, 2299), '61': (2277, 1029), '62': (964, 1609), '63': (2060, 1833), '64': (1558, 1540), '65': (1150, 2056), '66': (790, 1920), '67': (1796, 513), '68': (2430, 1097), '69': (2506, 2870), '70': (930, 2709), '71': (883, 2242), '72': (2985, 313), '73': (1682, 131), '74': (1935, 1221), '75': (554, 393), '76': (759, 2344), '77': (483, 2872), '78': (896, 1839), '79': (2844, 1804), '80': (2156, 445), '81': (192, 748), '82': (835, 266), '83': (2040, 2231), '84': (2005, 3032), '85': (739, 821), '86': (1597, 2860), '87': (2311, 1427), '88': (1539, 3095), '89': (545, 1255), '90': (712, 221), '91': (2152, 2917), '92': (2546, 704), '93': (1864, 42), '94': (1085, 1530), '95': (1636, 198), '96': (2255, 2637), '97': (2131, 109), '98': (1112, 1185), '99': (3094, 1558)}
for i in range(len(tour)-1):
    firstCity = s[str(tour[i])]
    secondCity = s[str(tour[i+1])]
    x_values = [firstCity[0], secondCity[0]]
    y_values = [firstCity[1], secondCity[1]]
    plt.plot(x_values, y_values)

plt.title("Greedy Solver for %d cities" % numCities)
plt.show()
